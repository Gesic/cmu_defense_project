<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="internet_lock_locked_padlock_password_secure_security_icon_127100" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>